name: 'Setup Pandoc Nightly'
description: 'Install last dev Pandoc version built'
inputs:
  os:  # id of input
    description: 'Which OS binary to choose'
    required: true
    default: 'linux'
  directory:  # id of input
    description: 'where to install'
    required: true
    default: '~/bin'
  
outputs:
  pandoc-version: 
    description: "Pandoc Version"
    value: ${{ steps.pandoc-version.outputs.version }}
  commit: 
    description: "Built from this commit"
    value: ${{ steps.get-artifact.outputs.commit }}
  run-url: 
    description: "Url of the run for the Pandoc nightly build"
    value: ${{ steps.get-artifact.outputs.run-url }}
  when: 
    description: "datetime of the nighlty build"
    value: ${{ steps.get-artifact.outputs.when }}
runs:
  using: "composite"
  steps: 
    - name: Last Nightly run
      id: get-artifact
      env:
        GH_TOKEN: ${{ github.token }}
      run: | 
        res=$(curl -H "Authorization: token $GH_TOKEN" $GITHUB_API_URL/repos/jgm/pandoc/actions/workflows/nightly.yml/runs?status="success")
        output=$(echo $res | jq -r '.workflow_runs | .[0] | {sha: .head_sha, runs_url: .html_url, artifacts: .artifacts_url, date: .updated_at}')
        artifact_id=$(curl -H "Authorization: token $GH_TOKEN" $(echo $output | jq -r .artifacts) | jq -r '.artifacts | map(select(.name == "nightly-linux")) | .[0].id')
        download_url=$GITHUB_API_URL/repos/jgm/pandoc/actions/artifacts/$artifact_id/zip
        echo "::set-output name=artifact::$(echo $download_url)"
        echo "::set-output name=run-url::$(echo $output | jq '.runs_url')"
        echo "::set-output name=commit::$(echo $output | jq '.sha')"
        echo "::set-output name=when::$(echo $output | jq '.date')"
      shell: bash
    - name: Download and unzip Pandoc
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo ${{ steps.get-artifact.outputs.artifact }}
        curl -L -o pandoc.zip -H "Authorization: token $GH_TOKEN" ${{ steps.get-artifact.outputs.artifact }}
        unzip -j -d ${{ inputs.directory }} pandoc.zip
        [ ${{ inputs.os }} = "linux" ] && chmod +x ~/bin/pandoc
        ~/bin/pandoc --version
      shell: bash
