name: 'Setup Pandoc Nightly'
description: 'Install last dev Pandoc version built'
inputs:
  directory:
    description: 'where to install pandoc binary. This path will be added to PATH.'
    required: true
    default: $RUNNER_TEMP/bin
  
outputs:
  commit: 
    description: "Built from this commit"
    value: ${{ steps.get-artifact.outputs.commit }}
  run-url: 
    description: "Url of the run for the Pandoc nightly build"
    value: ${{ steps.get-artifact.outputs.run-url }}
  when: 
    description: "datetime of the nighlty build"
    value: ${{ steps.get-artifact.outputs.when }}
runs:
  using: "composite"
  steps: 
    - name: Select binary for OS
      run: |
        case $RUNNER_OS in 
          "Linux")
              echo "BIN_NAME=nightly-linux" >> $GITHUB_ENV
              ;;
           "macOS")
              echo "BIN_NAME=nightly-macos" >> $GITHUB_ENV
              ;;
           "Windows")
              echo "BIN_NAME=nightly-windows" >> $GITHUB_ENV
              ;;
            *)
              echo "$RUNNER_OS not supported"
              exit 1
              ;;
        esac
      shell: bash
    - name: Last Nightly run
      id: get-artifact
      env:
        GH_TOKEN: ${{ github.token }}
      run: | 
        echo ">> Will retrieve $BIN_NAME artifact"
        res=$(curl -H "Authorization: token $GH_TOKEN" $GITHUB_API_URL/repos/jgm/pandoc/actions/workflows/nightly.yml/runs?status="success")
        output=$(echo $res | jq -r '.workflow_runs | .[0] | {sha: .head_sha, runs_url: .html_url, artifacts: .artifacts_url, date: .updated_at}')
        artifact_id=$(curl -H "Authorization: token $GH_TOKEN" $(echo $output | jq -r .artifacts) | jq -r '.artifacts | map(select(.name == env.BIN_NAME)) | .[0].id')
        download_url=$GITHUB_API_URL/repos/jgm/pandoc/actions/artifacts/$artifact_id/zip
        echo "::set-output name=artifact::$(echo $download_url)"
        echo "::set-output name=run-url::$(echo $output | jq '.runs_url')"
        echo "::set-output name=commit::$(echo $output | jq '.sha')"
        echo "::set-output name=when::$(echo $output | jq '.date')"
      shell: bash
    - name: Download and unzip Pandoc
      env:
        GH_TOKEN: ${{ github.token }}
      run: |
        echo ">> Will get artifact from this run ${{ steps.get-artifact.outputs.run-url }}"
        curl -L -o pandoc.zip -H "Authorization: token $GH_TOKEN" ${{ steps.get-artifact.outputs.artifact }}
        mkdir -p ${{ inputs.directory }}
        unzip -j -d ${{ inputs.directory }} pandoc.zip
        [ ${{ runner.os }} != "Windows" ] && chmod +x ${{ inputs.directory }}/pandoc
        echo ">> Pandoc version retrieve"
        ${{ inputs.directory }}/pandoc --version
        echo ${{ inputs.directory }} >> $GITHUB_PATH
        echo ">> Pandoc is available in ${{ inputs.directory }} which has been added to PATH"
      shell: bash
